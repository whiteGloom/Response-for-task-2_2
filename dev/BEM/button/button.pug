//- Миксин создаёт кнопку. Свойства:
//- "form" (string) ["box", "boxMini", "boxEvent", "round"] - отвечает форму кнопки. По умолчанию - "box".
//- "type" (string) [стандартные html значения] - отвечает роль кнопки в форме. По умолчанию - "button".
//- "blocked" (boolean / nothing) - заблокирована кнопка или нет.
//- "theme" (string) ["orange", "aquamarine", "aquamarineAlternate", "blocked"] - цветовая схема кнопки По умолчанию - false. Значение не учитывается, если кнопка заблокирована.
//- "content" (string) [string, "rightArrow", "leftArrow"] - содержание кнопки (текст для формы "box", стрелки для формы "round") По умолчанию - "button".
mixin buttonMix(options)
    -
        var options = options ? options : {};
        var form = options.form ? options.form : "box",
            type = options.type ? options.type : "button",
            blocked = options.blocked,
            theme = options.theme && !blocked ? options.theme : false,
            content = options.content ? options.content : "button";

    button.button(type=type class="" + (blocked ? " button_blocked" : "") + (theme ? " button_theme_" + theme : ""))&attributes(attributes)
        .button__outer(class="" +
                        (" button__outer_form_" + form) +
                        (theme ? " button__outer_theme_" + theme : "") +
                        (blocked ? " button__outer_blocked" : ""))
            .button__inner(class="" +
                            (" button__inner_form_" + form) +
                            (theme ? " button__inner_theme_" + theme : "") +
                            (blocked ? " button__inner_blocked" : ""))
                if blocked !== true
                    .button__rippleEffect
                case form
                    when "box" 
                    when "boxMini"
                    when "boxEvent"
                        .button__content(class="" + (" button__content_form_" + form) + (" button__content_theme_" + theme))= content

                    when "round"
                        svg.button__content(viewbox="0 0 44 44" class="" +
                                                                (" button__content_form_" + form) +
                                                                (theme ? " button__content_theme_" + theme : "") +
                                                                (blocked ? " button__content_blocked" : ""))

                            case content
                                when "rightArrow"
                                when "button"
                                    g(transform="translate(25, 11) rotate(45)")
                                        rect(width="4" height="17")
                                        rect(width="17" height="4" y="13")

                                when "leftArrow"
                                    g(transform="translate(20, 11) rotate(45)")
                                        rect(width="4" height="17" x="13")
                                        rect(width="17" height="4")